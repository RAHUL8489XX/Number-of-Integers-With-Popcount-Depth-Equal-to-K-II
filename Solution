class Solution:
    def popcountDepth(self, nums, queries):
        def get_depth(x):
            depth = 0
            while x != 1:
                x = bin(x).count("1")
                depth += 1
            return depth

        # Precompute depths
        depths = [get_depth(n) for n in nums]
        result = []

        for q in queries:
            if q[0] == 1:
                _, l, r, k = q
                count = sum(1 for i in range(l, r + 1) if depths[i] == k)
                result.append(count)
            else:
                _, idx, val = q
                nums[idx] = val
                depths[idx] = get_depth(val)

        return result
